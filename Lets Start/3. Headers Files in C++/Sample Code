//The given sample code for the mentioned header file in documents is just to understand the purpose of each header file.

//Code 01
//This is a Sample code for "stdio.h" header file
#include <stdio.h>

int main() {
    // Printing "Hello, World!" to the console
    printf("Hello, World!\n");

    // Taking input from the user
    int num;
    printf("Enter a number: ");
    scanf("%d", &num);
    printf("You entered: %d\n", num);
    return 0;
}

//Code 02
//This is a Sample code for "iostream" header file
#include <iostream>

int main() {
    // Printing "Hello World!" to the console
    cout << "Hello World!" << endl;

    // Taking input from the user
    int num;
    cout << "Enter a number : " << endl;
    cin >> num;
    cout << "You entered : " << num << endl;
    return 0;
}

//Code 03
//This is a Sample code for "string.h" header file
#include <string.h>
#include <iostream>

using namespace std;

int main() {
    // Declaring and initializing strings
    char str1[] = "Hello";
    char str2[10];
    
    // Copying a string
    strcpy(str2, str1);
    cout << "Copied string: " << str2 << endl;

    // Concatenating strings
    strcat(str2, ", World!");
    cout << "Concatenated string: " << str2 << endl;

    // Finding the length of a string
    int length = strlen(str2);
    cout << "Length of the string: " << length << endl;

    // Comparing strings
    char str3[] = "Hello, World!";
    int result = strcmp(str2, str3);
    if (result == 0)
        cout << "Strings are equal." << endl;
    else
        cout << "Strings are not equal." << endl;

    return 0;
}

//Code 04
//This is a Sample code for "math.h" header file
#include <iostream>
#include <cmath>

using namespace std;

int main() {
    double num = 25.0;
    double squareRoot = sqrt(num);
    cout << "Square root of " << num << " is: " << squareRoot << endl;
    return 0;
}

//Code 05
//This is a Sample code for "iomanip" header file
#include <iostream>
#include <iomanip>

using namespace std;

int main() {
    double pi = 3.14159265359;
    cout << "Default precision: " << pi << endl;

    // Set precision to 2 decimal places
    cout << "Precision set to 2 decimal places: ";
    cout << fixed << setprecision(2) << pi << endl;
    return 0;
}

//Code 06
//This is a Sample code for "signal.h" header file.
#include <iostream>
#include <csignal>

using namespace std;

// Signal handler function
void signalHandler(int signalNumber) {
    cout << "Signal received: " << signalNumber << endl;
}
int main() {
    // Registering signal handler for SIGINT (Ctrl+C)
    signal(SIGINT, signalHandler);

    cout << "Running... Press Ctrl+C to send SIGINT signal." << endl;

    // Infinite loop to keep the program running
    while (true) {}

    return 0;
}

//Code 07
//This is a Sample code for "stdarg.h" header file.
#include <iostream>
#include <cstdarg>

using namespace std;

// Function to calculate the sum of a variable number of integers
int sum(int count, ...) {
    int sum = 0;

    // Declare a va_list variable to hold the variable arguments
    va_list args;

    // Initialize the va_list variable to point to the first argument after 'count'
    va_start(args, count);

    // Loop through the variable arguments and calculate the sum
    for (int i = 0; i < count; ++i) {
        sum += va_arg(args, int);
    }

    // Clean up the va_list variable
    va_end(args);

    return sum;
}

int main() {
    // Calculate the sum of 3 integers
    int result = sum(3, 10, 20, 30);
    cout << "Sum: " << result << endl;

    return 0;
}

//Code 08
// This is a Sample code for "errno.h" header file
#include <iostream>
#include <cerrno>
#include <cstring>

using namespace std;

int main() {
    // Attempt to open a non-existent file
    FILE* file = fopen("non_existent_file.txt", "r");

    // Check if file opening was successful
    if (file == NULL) {
        // Print error message based on errno
        cout << "Error: " << strerror(errno) << endl;
    } else {
        // File opening successful, close the file
        fclose(file);
        cout << "File opened successfully!" << endl;
    }

    return 0;
}

//Code 09
//This is a Sample code for "fstream.h" header file
#include <iostream>
#include <fstream>

using namespace std;

int main() {
    // Writing to a file
    ofstream outputFile("output.txt");
    if (outputFile.is_open()) {
        outputFile << "Hello, World!" << endl;
        outputFile.close();
        cout << "Data written to file successfully." << endl;
    } else {
        cout << "Unable to open file for writing." << endl;
    }

    // Reading from a file
    ifstream inputFile("output.txt");
    if (inputFile.is_open()) {
        string line;
        while (getline(inputFile, line)) {
            cout << "Data read from file: " << line << endl;
        }
        inputFile.close();
    } else {
        cout << "Unable to open file for reading." << endl;
    }

    return 0;
}

//Code 10
//This is a Sample code for "time.h" header file
#include <iostream>
#include <ctime>

using namespace std;

int main() {
    
    // Get the current time
    time_t currentTime = time(nullptr);
    // Convert the current time to a string representation
    char* timeString = ctime(&currentTime);
    // Output the current time
    cout << "Current time: " << timeString;
    
    return 0;
}

//Code 11
//This is a Sample code for "float.h" header file
#include <iostream>
#include <float.h>

using namespace std;

int main() {
    cout << "Minimum positive float value: " << FLT_MIN << endl;
    cout << "Maximum float value: " << FLT_MAX << endl;
    cout << "Number of decimal digits of precision: " << FLT_DIG << endl;
    return 0;
}

//Code 12
//This is a Sample code for "limits.h" header file
#include <iostream>
#include <limits.h>

using namespace std;

int main() {
    cout << "Minimum value for char: " << CHAR_MIN << endl;
    cout << "Maximum value for char: " << CHAR_MAX << endl;
    cout << "Minimum value for int: " << INT_MIN << endl;
    cout << "Maximum value for int: " << INT_MAX << endl;

    return 0;
}

//Code 13
//This is a Sample code for "assert.h" header file
#include <iostream>
#include <cassert>

using namespace std;

int main() {
    int x = 5;
    int y = 10;

    // Check if x is equal to y using assert
    assert(x == y);

    cout << "After assert" << endl;

    return 0;
}

//Code 14
//This is a Sample code for "ctype.h" header file
#include <iostream>
#include <cctype>

using namespace std;

int main() {
    char ch = 'A';

    // Check if the character is uppercase
    if (isupper(ch)) {
        cout << ch << " is an uppercase letter." << endl;
    } else {
        cout << ch << " is not an uppercase letter." << endl;
    }

    // Convert the character to lowercase
    char lowerCh = tolower(ch);
    cout << "Lowercase of " << ch << " is: " << lowerCh << endl;

    return 0;
}

//Code 15
//This is a Sample code for "locale.h" header file
#include <iostream>
#include <locale.h>

using namespace std;

int main() {
    // Set the locale to the system's default locale
    setlocale(LC_ALL, "");

    // Get the current locale
    char* currentLocale = setlocale(LC_ALL, nullptr);
    if (currentLocale != nullptr) {
        cout << "Current locale: " << currentLocale << endl;
    } else {
        cout << "Failed to get current locale." << endl;
    }

    return 0;
}


//Code 16
//This is a Sample code for "float.h" header file
//Code 17
//This is a Sample code for "float.h" header file
